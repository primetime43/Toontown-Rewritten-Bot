<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emgu.CV.Platform.NetFramework</name>
    </assembly>
    <members>
        <member name="T:Emgu.CV.BitmapExtension">
            <summary>
            Provide extension method to convert IInputArray to and from Bitmap
            </summary>
        </member>
        <member name="F:Emgu.CV.BitmapExtension.GrayscalePalette">
            <summary>
            The ColorPalette of Grayscale for Bitmap Format8bppIndexed
            </summary>
        </member>
        <member name="M:Emgu.CV.BitmapExtension.ColorPaletteToLookupTable(System.Drawing.Imaging.ColorPalette,Emgu.CV.Matrix{System.Byte}@,Emgu.CV.Matrix{System.Byte}@,Emgu.CV.Matrix{System.Byte}@,Emgu.CV.Matrix{System.Byte}@)">
            <summary>
            Convert the color palette to four lookup tables
            </summary>
            <param name="palette">The color palette to transform</param>
            <param name="bTable">Lookup table for the B channel</param>
            <param name="gTable">Lookup table for the G channel</param>
            <param name="rTable">Lookup table for the R channel</param>
            <param name="aTable">Lookup table for the A channel</param>
        </member>
        <member name="M:Emgu.CV.BitmapExtension.RawDataToBitmap(System.IntPtr,System.Int32,System.Drawing.Size,System.Type,System.Int32,System.Type,System.Boolean)">
            <summary>
            Convert raw data to bitmap
            </summary>
            <param name="scan0">The pointer to the raw data</param>
            <param name="step">The step</param>
            <param name="size">The size of the image</param>
            <param name="srcColorType">The source image color type</param>
            <param name="numberOfChannels">The number of channels</param>
            <param name="srcDepthType">The source image depth type</param>
            <param name="tryDataSharing">Try to create Bitmap that shares the data with the image</param>
            <returns>The Bitmap</returns>
        </member>
        <member name="M:Emgu.CV.BitmapExtension.ToBitmap(Emgu.CV.Mat)">
            <summary>
            Convert the mat into Bitmap, the pixel values are copied over to the Bitmap
            </summary>
        </member>
        <member name="M:Emgu.CV.BitmapExtension.ToBitmap(Emgu.CV.UMat)">
            <summary>
            Convert the umat into Bitmap, the pixel values are copied over to the Bitmap
            </summary>
        </member>
        <member name="M:Emgu.CV.BitmapExtension.ToBitmap(Emgu.CV.Cuda.GpuMat)">
            <summary>
            Convert the gpuMat into Bitmap, the pixel values are copied over to the Bitmap
            </summary>
        </member>
        <member name="M:Emgu.CV.BitmapExtension.ToImage``2(System.Drawing.Bitmap)">
            <summary>
            Create an Image &lt; TColor, TDepth &gt; from Bitmap
            </summary>
        </member>
        <member name="M:Emgu.CV.BitmapExtension.CopyFromBitmap``2(Emgu.CV.Image{``0,``1},System.Drawing.Bitmap)">
            <summary>
            Utility function for converting Bitmap to Image
            </summary>
            <param name="bmp">the bitmap to copy data from</param>
            <param name="image">The image to copy data to</param>
        </member>
        <member name="M:Emgu.CV.BitmapExtension.AsBitmap``2(Emgu.CV.Image{``0,``1})">
            <summary>
            Provide a more efficient way to convert Image&lt;Gray, Byte&gt;, Image&lt;Bgr, Byte&gt; and Image&lt;Bgra, Byte&gt; into Bitmap
            such that the image data is <b>shared</b> with Bitmap. 
            If you change the pixel value on the Bitmap, you change the pixel values on the Image object as well!
            For other types of image this property has the same effect as ToBitmap()
            <b>Take extra caution not to use the Bitmap after the Image object is disposed</b>
            </summary>
            <typeparam name="TColor">The color of the image</typeparam>
            <typeparam name="TDepth">The depth of the image</typeparam>
            <param name="image">The image to create Bitmap from</param>
            <returns>A bitmap representation of the image. In the cases of Image&lt;Gray, Byte&gt;, Image&lt;Bgr, Byte&gt; and Image&lt;Bgra, Byte&gt;, the image data is shared between the Bitmap and the Image object.</returns>
        </member>
        <member name="M:Emgu.CV.BitmapExtension.ToBitmap``2(Emgu.CV.Image{``0,``1})">
            <summary> 
            Convert this image into Bitmap, the pixel values are copied over to the Bitmap
            </summary>
            <remarks> For better performance on Image&lt;Gray, Byte&gt; and Image&lt;Bgr, Byte&gt;, consider using the Bitmap property </remarks>
            <returns> This image in Bitmap format, the pixel data are copied over to the Bitmap</returns>
        </member>
        <member name="M:Emgu.CV.BitmapExtension.ToBitmap``2(Emgu.CV.Image{``0,``1},System.Int32,System.Int32)">
            <summary> Create a Bitmap image of certain size</summary>
            <param name="image">The image to be converted to Bitmap</param>
            <param name="width">The width of the bitmap</param>
            <param name="height"> The height of the bitmap</param>
            <returns> This image in Bitmap format of the specific size</returns>
        </member>
        <member name="M:Emgu.CV.BitmapExtension.ToBitmap``2(Emgu.CV.Cuda.CudaImage{``0,``1})">
            <summary>
            Convert the CudaImage to its equivalent Bitmap representation
            </summary>
        </member>
        <member name="T:Emgu.CV.BitmapFileReaderMat">
            <summary>
            Class that can be used to read file into Mat
            </summary>
        </member>
        <member name="M:Emgu.CV.BitmapFileReaderMat.ReadFile(System.String,Emgu.CV.Mat,Emgu.CV.CvEnum.ImreadModes)">
            <summary>
            Read the file into a Mat
            </summary>
            <param name="fileName">The name of the image file</param>
            <param name="mat">The Mat to read into</param>
            <param name="loadType">Image load type.</param>
            <returns>True if the file can be read into the Mat</returns>
        </member>
        <member name="T:Emgu.CV.BitmapFileWriterMat">
            <summary>
            Class that can be used to write the Mat to a file
            </summary>
        </member>
        <member name="M:Emgu.CV.BitmapFileWriterMat.WriteFile(Emgu.CV.Mat,System.String)">
            <summary>
            Write the Mat into the file
            </summary>
            <param name="mat">The Mat to write</param>
            <param name="fileName">The name of the file to be written into</param>
            <returns>True if the file has been written into Mat</returns>
        </member>
        <member name="T:Emgu.CV.UI.HistogramBox">
            <summary>
            The control that is used to display histogram
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.HistogramBox.#ctor">
            <summary>
            Construct a histogram control
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.HistogramBox.GenerateHistogram(System.String,System.Drawing.Color,Emgu.CV.Mat,System.Int32,System.Single[])">
            <summary>
            Add a plot of the 1D histogram. You should call the Refresh() function to update the control after all modification is complete.
            </summary>
            <param name="name">The name of the histogram</param>
            <param name="color">The drawing color</param>
            <param name="histogram">The 1D histogram to be drawn</param>
            <param name="binSize">The size of the bin</param>
            <param name="ranges">The ranges</param>
        </member>
        <member name="M:Emgu.CV.UI.HistogramBox.GenerateHistograms(Emgu.CV.IInputArray,System.Int32)">
            <summary>
            Generate histograms for the image. One histogram is generated for each color channel.
            You will need to call the Refresh function to do the painting afterward.
            </summary>
            <param name="image">The image to generate histogram from</param>
            <param name="numberOfBins">The number of bins for each histogram</param>
        </member>
        <member name="M:Emgu.CV.UI.HistogramBox.ClearHistogram">
            <summary>
            Remove all the histogram from the control. You should call the Refresh() function to update the control after all modification is complete.
            </summary>
        </member>
        <member name="T:Emgu.CV.UI.HistogramViewer">
            <summary>
            A view for histogram
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.HistogramViewer.#ctor">
            <summary>
            A histogram viewer
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.HistogramViewer.Show(Emgu.CV.IInputArray)">
            <summary>
            Display the histograms of the specific image
            </summary>
            <param name="image">The image to retrieve histogram from</param>
        </member>
        <member name="M:Emgu.CV.UI.HistogramViewer.Show(Emgu.CV.IInputArray,System.Int32)">
            <summary>
            Display the histograms of the specific image
            </summary>
            <param name="image">The image to retrieve histogram from</param>
            <param name="numberOfBins">The number of bins in the histogram</param>
        </member>
        <member name="P:Emgu.CV.UI.HistogramViewer.HistogramCtrl">
            <summary>
            Get the histogram control of this viewer
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.HistogramViewer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.HistogramViewer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emgu.CV.UI.HistogramViewer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emgu.CV.UI.ImageBox">
            <summary>
            An image box is a user control that is similar to picture box, but display Emgu CV IImage and provides enhenced functionalities.
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ImageBox._image">
            <summary>
            The image that is setted throught the Image property
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ImageBox._displayedImage">
            <summary>
            The image that is displayed
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ImageBox._typeToToolStripMenuItemsDictionary">
            <summary>
            A cache to store the ToolStripMenuItems for different types of images
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ImageBox._operationLists">
            <summary>
            The list of operations binded to this ImageBox
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ImageBox._timerStartTime">
            <summary>
            Timer used for caculating the frame rate
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ImageBox._imagesReceivedSinceCounterStart">
            <summary>
            One of the parameters used for caculating the frame rate
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageBox.#ctor">
            <summary>
            Create a ImageBox
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.ImageBox.FunctionalMode">
            <summary>
            Get or set the functional mode for the ImageBox
            </summary>
        </member>
        <member name="E:Emgu.CV.UI.ImageBox.OnFunctionalModeChanged">
            <summary>
            The event which will be trigerred when functional mode is changed
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.ImageBox.Image">
            <summary>
            Set the image for this image box
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.ImageBox.DisplayedImage">
            <summary>
            The image that is being displayed. It's the Image following by some user defined image operation
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageBox.PushOperation(Emgu.CV.UI.Operation)">
            <summary>
            Push the specific operation to the operation collection
            </summary>
            <param name="operation">The operation to be pushed onto the operation collection</param>
        </member>
        <member name="M:Emgu.CV.UI.ImageBox.ClearOperation">
            <summary>
            Remove all the operations from the collection
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageBox.PopOperation">
            <summary>
            Remove the last added operation
            </summary>
        </member>
        <member name="T:Emgu.CV.UI.ImageBox.FunctionalModeOption">
            <summary>
            The functional mode for ImageBox
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ImageBox.FunctionalModeOption.Minimum">
            <summary>
            The ImageBox is only used for displaying image. 
            No right-click menu nor Pan/Zoom available
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ImageBox.FunctionalModeOption.RightClickMenu">
            <summary>
            Enable the right click menu
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ImageBox.FunctionalModeOption.PanAndZoom">
            <summary>
            Enable Pan and Zoom
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ImageBox.FunctionalModeOption.Everything">
            <summary>
            Support for the right click menu, Pan and Zoom
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Emgu.CV.UI.ImageBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emgu.CV.UI.ImageProperty">
            <summary>
            The control to display image properties
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageProperty.#ctor">
            <summary>
            Create a ImageProperty control
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.ImageProperty.ImageBox">
            <summary>
            The parent imagebox for this property panel
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageProperty.SetMousePositionOnImage(System.Drawing.Point)">
            <summary>
            Set the mouse position over the image. 
            It also set the color intensity of the pixel on the image where is mouse is at
            </summary>
            <param name="location">The location of the mouse on the image</param>
        </member>
        <member name="M:Emgu.CV.UI.ImageProperty.SetOperations(System.Collections.Generic.List{Emgu.CV.UI.Operation})">
            <summary>
            Set the description of the operation view
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.ImageProperty.FramesPerSecondText">
            <summary>
            Set the frame rate
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageProperty.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Emgu.CV.UI.ImageProperty.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageProperty.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emgu.CV.UI.ImageViewer">
            <summary>
            The Image viewer that display IImage
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageViewer.#ctor">
            <summary>
            Create an ImageViewer
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageViewer.#ctor(Emgu.CV.IInputArray)">
            <summary>
            Create an ImageViewer from the specific <paramref name="image"/>
            </summary>
            <param name="image">The image to be displayed in this viewer</param>
        </member>
        <member name="M:Emgu.CV.UI.ImageViewer.#ctor(Emgu.CV.IInputArray,System.String)">
            <summary>
            Create an ImageViewer from the specific <paramref name="image"/>, using <paramref name="imageName"/> as window name
            </summary>
            <param name="image">The image to be displayed</param>
            <param name="imageName">The name of the image</param>
        </member>
        <member name="P:Emgu.CV.UI.ImageViewer.Image">
            <summary>
            Get or Set the image in this ImageViewer
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.ImageViewer.ImageBox">
            <summary>
            Get the image box hosted in this viewer
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageViewer.Show(Emgu.CV.IInputArray)">
            <summary>
            Create a ImageViewer with the specific image and show it.
            </summary>
            <param name="image">The image to be displayed in ImageViewer</param>
        </member>
        <member name="M:Emgu.CV.UI.ImageViewer.Show(Emgu.CV.IInputArray,System.String)">
            <summary>
            Create a ImageViewer with the specific image and show it.
            </summary>
            <param name="image">The image to be displayed in ImageViewer</param>
            <param name="windowName">The name of the window</param>
        </member>
        <member name="F:Emgu.CV.UI.ImageViewer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImageViewer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emgu.CV.UI.ImageViewer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emgu.CV.UI.MatrixBox">
            <summary>
            A control that is used to visualize a matrix
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.MatrixBox.#ctor">
            <summary>
            Create a MatrixBox
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.MatrixBox.Matrix">
            <summary>
            Get or Set the Matrix&lt;TDepth&gt; object; of this MatrixBox
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.MatrixBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.MatrixBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emgu.CV.UI.MatrixBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emgu.CV.UI.MatrixViewer">
            <summary>
            A MatrixViewer that is used to visualize a matrix
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.MatrixViewer.#ctor">
            <summary>
            Create a MatrixViewer
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.MatrixViewer.Matrix">
            <summary>
            Get or Set the Matrix&lt;&gt; object; for this MatrixViewer
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.MatrixViewer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.MatrixViewer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emgu.CV.UI.MatrixViewer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emgu.CV.UI.Operation">
            <summary>
            An operation contains the MethodInfo and the methods parameters. It provides a way to invoke a specific method with the specific parameters. 
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Operation.Method">
            <summary>
            The MethodInfo
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Operation.Parameters">
            <summary>
            The parameters for this method
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.Operation.#ctor(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Create an operation using the specific method and parameters
            </summary>
            <param name="mi">The method info</param>
            <param name="parameters">The parameters for this method</param>
        </member>
        <member name="M:Emgu.CV.UI.Operation.InvokeMethod(System.Object)">
            <summary>
            Call the specific method with the specific parameters on the provided <paramref name="instance"/>
            </summary>
            <param name="instance">The instance to call the method</param>
            <returns></returns>
        </member>
        <member name="M:Emgu.CV.UI.Operation.ToString">
            <summary>
            Represent this operation as a string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emgu.CV.UI.Operation.ToCode(Emgu.Util.TypeEnum.ProgrammingLanguage)">
            <summary>
            Represent this operation as code
            </summary>
            <returns>The source code</returns>
        </member>
        <member name="T:Emgu.CV.UI.OperationsView">
            <summary>
            A user control to display the operations
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.OperationsView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.OperationsView.Language">
            <summary>
            Set the programming language for this Operation View
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.OperationsView.DisplayOperations(System.Collections.Generic.List{Emgu.CV.UI.Operation})">
            <summary>
            Display the operations
            </summary>
            <param name="operations">The operations to be displayed</param>
        </member>
        <member name="F:Emgu.CV.UI.OperationsView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.OperationsView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emgu.CV.UI.OperationsView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emgu.CV.UI.PanAndZoomPictureBox">
            <summary>
            A picture box with pan and zoom functionality
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.PanAndZoomPictureBox._zoomScale">
            <summary>
            The zoom scale of the image to be displayed
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.PanAndZoomPictureBox.ZoomLevels">
            <summary>
            The available zoom levels for the displayed image 
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.PanAndZoomPictureBox.#ctor">
            <summary>
            Create a picture box with pan and zoom functionality
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.PanAndZoomPictureBox.PanableAndZoomable">
            <summary>
            Get or Set the property to enable(disable) Pan and Zoom
            </summary>
        </member>
        <member name="E:Emgu.CV.UI.PanAndZoomPictureBox.OnZoomScaleChange">
            <summary>
            The event to fire when the zoom scale is changed
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.PanAndZoomPictureBox.InterpolationMode">
            <summary>
            Get or Set the interpolation mode for zooming operation
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.PanAndZoomPictureBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paint the image
            </summary>
            <param name="pe">The paint event</param>
        </member>
        <member name="P:Emgu.CV.UI.PanAndZoomPictureBox.HorizontalScrollBar">
            <summary>
            Get the horizontal scroll bar from this control
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.PanAndZoomPictureBox.VerticalScrollBar">
            <summary>
            Get the vertical scroll bar of this control
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.PanAndZoomPictureBox.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Used for tracking the mouse position on the image
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emgu.CV.UI.PanAndZoomPictureBox.GetViewSize">
            <summary>
            Get the size of the view area
            </summary>
            <returns>The size of the view area</returns>
        </member>
        <member name="M:Emgu.CV.UI.PanAndZoomPictureBox.GetImageSize">
            <summary>
            Get the size of the image
            </summary>
            <returns>The size of the image</returns>
        </member>
        <member name="M:Emgu.CV.UI.PanAndZoomPictureBox.Min(System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Get the minimum of the two sizes
            </summary>
            <param name="s1">The first size</param>
            <param name="s2">The second size</param>
            <returns>The minimum of the two sizes</returns>
        </member>
        <member name="M:Emgu.CV.UI.PanAndZoomPictureBox.DrawReversibleRectangle(System.Drawing.Rectangle)">
            <summary>
            Draw a reversible rectangle on the control.
            </summary>
            <param name="rect">The rectangle using the control's coordinate system</param>
        </member>
        <member name="M:Emgu.CV.UI.PanAndZoomPictureBox.GetRectangle(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Get the rectangle defined by the two points on the control
            </summary>
            <param name="p1">The first point on the control</param>
            <param name="p2">The second point on the control</param>
            <returns>the rectangle defined by the two points</returns>
        </member>
        <member name="P:Emgu.CV.UI.PanAndZoomPictureBox.ZoomScale">
            <summary>
            Get or Set the zoom scale
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.PanAndZoomPictureBox.SetZoomScale(System.Double,System.Drawing.Point)">
            <summary>
            Set the new zoom scale for the displayed image
            </summary>
            <param name="zoomScale">The new zoom scale</param>
            <param name="fixPoint">The point to be fixed, in display coordinate</param>
        </member>
        <member name="T:Emgu.CV.UI.ParameterInputDialog">
            <summary>
            The dialog to ask user for parameters to the specific method
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ParameterInputDialog._paramValue">
            <summary>
            The List of parameter values
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ParameterInputDialog._paramInfo">
            <summary>
            The array of parameter info
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.ParameterInputDialog.Parameters">
            <summary>
            Get the parameters obtained by this parameter input dialog
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ParameterInputDialog.ParamInputPanel.GetValue">
            <summary>
            Return the value of the parameter input panel, if unable to retrieve value, return null
            </summary>
            <returns>The value of the parameter input panel, if unable to retrieve value, return null</returns>
        </member>
        <member name="P:Emgu.CV.UI.ParameterInputDialog.ParamInputPanel.GetParamFunction">
            <summary>
            The function used to obtain the parameter from this input panel
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ParameterInputDialog.ParseParameterName(System.Reflection.ParameterInfo)">
            <summary>
            Get the name of the parameter
            </summary>
            <param name="param">the parameter</param>
            <returns>the name of the parameter</returns>
        </member>
        <member name="M:Emgu.CV.UI.ParameterInputDialog.CreatePanelForParameter(System.Reflection.ParameterInfo,System.Object)">
            <summary>
            Create a panel for the specific parameter
            </summary>
            <param name="param">the parameter to create panel for</param>
            <param name="defaultValue">The default value for the parameter</param>
            <returns>the panel</returns>
        </member>
        <member name="M:Emgu.CV.UI.ParameterInputDialog.GetParams(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Obtain the parameters for <paramref name="method"/> and put them in <paramref name="defaultParameterValues"/>
            </summary>
            <param name="method">The method to Obtain parameters from</param>
            <param name="defaultParameterValues">The list that will be used as the storage for the retrieved parameters, if it contains elements, those elements will be used as default value</param>
            <returns>True if successed, false otherwise</returns>
        </member>
        <member name="F:Emgu.CV.UI.ParameterInputDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ParameterInputDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emgu.CV.UI.ParameterInputDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emgu.CV.UI.Properties.StringTable">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.Count">
            <summary>
              Looks up a localized string similar to Count.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.DefaultHistogramTitle">
            <summary>
              Looks up a localized string similar to Histogram.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.File">
            <summary>
              Looks up a localized string similar to File.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.Filters">
            <summary>
              Looks up a localized string similar to Filters.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.LoadImage">
            <summary>
              Looks up a localized string similar to Load Image....
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.OK">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.Only1DHistogramSupported">
            <summary>
              Looks up a localized string similar to Only 1D histogram is supported.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.ParameterIsInvalid">
            <summary>
              Looks up a localized string similar to Parameter {0} is invalid..
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.ParameterTypeIsNotSupported">
            <summary>
              Looks up a localized string similar to Parameter type &apos;{0}&apos; is not supported.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.PleaseLoadAnImageFirst">
            <summary>
              Looks up a localized string similar to Please load an image first.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.Property">
            <summary>
              Looks up a localized string similar to Property.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.SaveAs">
            <summary>
              Looks up a localized string similar to Save As....
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.SaveImageDialogText">
            <summary>
              Looks up a localized string similar to File Saving.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.Unknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.UnZoom">
            <summary>
              Looks up a localized string similar to Un-Zoom.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.Value">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.Zoom">
            <summary>
              Looks up a localized string similar to Zoom.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.ZoomIn">
            <summary>
              Looks up a localized string similar to Zoom In.
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.Properties.StringTable.ZoomOut">
            <summary>
              Looks up a localized string similar to Zoom Out.
            </summary>
        </member>
        <member name="T:Emgu.CV.UI.ImagePropertyDialog">
            <summary>
            A dialog to display the property of an image
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImagePropertyDialog.#ctor(Emgu.CV.UI.ImageBox)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Emgu.CV.UI.ImagePropertyDialog.ImagePropertyControl">
            <summary>
            Get the image property panel
            </summary>
        </member>
        <member name="F:Emgu.CV.UI.ImagePropertyDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emgu.CV.UI.ImagePropertyDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emgu.CV.UI.ImagePropertyDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
